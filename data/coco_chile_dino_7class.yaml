# YOLOv5 üöÄ by Ultralytics, GPL-3.0 license
# COCO 2017 dataset http://cocodataset.org by Microsoft
# Example usage: python train.py --data coco.yaml
# parent
# ‚îú‚îÄ‚îÄ yolov5
# ‚îî‚îÄ‚îÄ datasets
#     ‚îî‚îÄ‚îÄ coco  ‚Üê downloads here (20.1 GB)


# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path: /mnt/data/sibo  # dataset root dir
# train: train2017.txt  # train images (relative to 'path') 118287 images
train: 
  # - coco/train2017_chile_15_class.txt #69K images
  # - GP45/20230517-0523/dino_2class/train #200 images
  # - GP45/20230606-0612/dino_2class/train #200 images
  # - GP45/202308/dino_7class/train #1710 images
  - GP45/202309/dino_7class/train #1912 images  
  # - chile_remote_videos/data_annotation/829_annotation/train/ #400+ images, human labeled
  # - chile_remote_videos/Chile_713_data.v13i.yolov5pytorch/train/ #43 images
  # - cone_dataset/ArtificialTrafficCones.v1-basic-noaug.yolov5pytorch/train/ #714 images
  # - Hard_Hat_Workers.v1i.yolov5pytorch/train/ #5269 images
# val: val2017.txt  # val images (relative to 'path') 5000 images
val: 
  # - GP45/20230517-0523/dino_2class/valid #50 images
  # - GP45/20230606-0612/dino_2class/valid #200 images
  # - GP45/202308/dino_7class/valid #320 images
  - GP45/202309/dino_7class/valid #478 images
test:
  # - GP45/20230517-0523/dino_2class/valid
  # - GP45/20230606-0612/dino_2class/valid
  # - GP45/202308/dino_7class/valid #151 images
# test: test-dev2017.txt  # 20288 of 40670 images, submit to https://competitions.codalab.org/competitions/20794

# Classes
nc: 7
names: ['person', 'car', 'truck', 'cell phone', 'cone', 'helmet', 'machinery vehicle']

# nc: 15  # number of classes
# names: ['person', 'car', 'truck', 'cell phone', 'excavator', # 0-4 
#         'loader', 'crane', 'cone', 'hook', 'shovel', # 5-9
#          'payload', 'helmet', 'bar', 'rope', 'barrier'] # 10-14

# nc: 17
        #  'payload', 'rigger', 'windbreaker', 'helmet', 'bar', # 10-14
        # 'rope', 'barrier']  # 15 - 16
# names:
#   0: person
#   1: bicycle
#   2: car
#   3: motorcycle
#   4: airplane
#   5: bus
#   6: train
#   7: truck
#   8: boat
#   9: traffic light
#   10: fire hydrant
#   11: stop sign
#   12: parking meter
#   13: bench
#   14: bird
#   15: cat
#   16: dog
#   17: horse
#   18: sheep
#   19: cow
#   20: elephant
#   21: bear
#   22: zebra
#   23: giraffe
#   24: backpack
#   25: umbrella
#   26: handbag
#   27: tie
#   28: suitcase
#   29: frisbee
#   30: skis
#   31: snowboard
#   32: sports ball
#   33: kite
#   34: baseball bat
#   35: baseball glove
#   36: skateboard
#   37: surfboard
#   38: tennis racket
#   39: bottle
#   40: wine glass
#   41: cup
#   42: fork
#   43: knife
#   44: spoon
#   45: bowl
#   46: banana
#   47: apple
#   48: sandwich
#   49: orange
#   50: broccoli
#   51: carrot
#   52: hot dog
#   53: pizza
#   54: donut
#   55: cake
#   56: chair
#   57: couch
#   58: potted plant
#   59: bed
#   60: dining table
#   61: toilet
#   62: tv
#   63: laptop
#   64: mouse
#   65: remote
#   66: keyboard
#   67: cell phone
#   68: microwave
#   69: oven
#   70: toaster
#   71: sink
#   72: refrigerator
#   73: book
#   74: clock
#   75: vase
#   76: scissors
#   77: teddy bear
#   78: hair drier
#   79: toothbrush


# Download script/URL (optional)
download: |
  from utils.general import download, Path


  # Download labels
  segments = False  # segment or box labels
  dir = Path(yaml['path'])  # dataset root dir
  url = 'https://github.com/ultralytics/yolov5/releases/download/v1.0/'
  urls = [url + ('coco2017labels-segments.zip' if segments else 'coco2017labels.zip')]  # labels
  download(urls, dir=dir.parent)

  # Download data
  urls = ['http://images.cocodataset.org/zips/train2017.zip',  # 19G, 118k images
          'http://images.cocodataset.org/zips/val2017.zip',  # 1G, 5k images
          'http://images.cocodataset.org/zips/test2017.zip']  # 7G, 41k images (optional)
  download(urls, dir=dir / 'images', threads=3)
